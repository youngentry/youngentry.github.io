<a href="#!">link</a> #!는 링크를 작동하지 않도록 합니다.

/ root로 이동합니다.
./ 의 경우에는 생략아 가능합니다.


////////////////////////////////////////////////
다단메뉴 만들기
          <nav class="gnb"> 
네비게이션 태그 클래스는 global navigation bars 를 쓰기도 하고, nav 그대로 쓰기도 합니다.
이외에도 Local Navigation Bar 를 쓰는 경우도 있습니다.

메뉴를 만들 때 칸을 전부 a 로 만들기 위해서는 block과 padding을 이용하면 됩니다.
      .header .gnb > ul > li a {
        display: block;
        padding: 0 25px;
      }
      
      
////////////////////////////////////////////////////
다단메뉴 반응형으로 만드는 방법입니다.
@media max-width를 필요한 사이즈마다 적용합니다.
      @media (max-width: 768px) {
        body {
          background: #369;
        }
      }
웹 사이즈의 css 설정을 그대로 붙여넣습니다.
width: 1200px과 같이 고정된 사이즈로 인해서 축소된 화면에서는 스크롤 바가 생깁니다.
width: 1200px; -> auto
        .header .container {
          width: auto; 
        } 
메뉴가 만들어질 위치를 조절합니다.        
        .header .gnb {
          position: fixed;
          top: 0;
          left: 0;
          z-index: 999;
          width: calc(100% - 90px);
          height: 100vh;
          background: #fff;
          margin: 0 0 0 auto;
        }
메뉴를 세로로 배치합니다.
        .header .gnb > ul {
          display: flex;
          flex-direction: column;
          line-height: 40px;
        }
position: static; 서브메뉴들이 공간으로 차지하도록 합니다.
        .header .gnb > ul > li ul {
          display: none;
          position: static;
          top: 100px;
          left: 50%;
          z-index: 999;
          width: auto;
          line-height: 40px;
          transform: translateX(0);
          text-align: center;
          background: #ff0;
        }
hover가 필요 없으니 기능을 없앱니다.
        .header .gnb > ul > li:hover ul {
          display: none;
        }
        
        
//////////////////////////////////////////////
JS로 클릭 이벤트에 반응해 $(this) menu가 나타나고 나머지는 사라지는 기능을 추가합니다.
        $(".gnb>ul>li>a").on("click", function (e) {
          e.preventDefault();
          $(".gnb>ul>li>a").next().hide();
          $(this).next().show();
        });
        
또 다르게는 부모의 형제들의 ul을 감추도록 할 수도 있습니다.
          $(this).parent().siblings().children("ul").hide();
children 대신 후손 선택자 find 기능도 있습니다.
          $(this).parent().siblings().find("ul").hide();

슬라이드 기능은 slideDown, sildeUp 입니다.
          $(this).next().slideDown();
          $(this).parent().siblings().find("ul").slideUp();
          
toggle로 열고 닫기를 할 수 있습니다.
          $(this).next().slideToggle();
          $(this).parent().siblings().find("ul").slideUp();
          
stop 기능을 추가하면 슬라이드 액션이 끝나기 전, 진행 중에 열고 닫기를 할 수 있습니다.
          $(this).next().stop().slideToggle();
          $(this).parent().siblings().find("ul").stop().slideUp();
          
          
html로 돌아가 메뉴 button을 만듭니다.
          <div class="mbtn">
            <i class="xi-bars"></i>
          </div>
pc사이즈에서는 보이지 않고
      .mbtn {
        display: none;
      }
작은 화면에서는 보이도록 합니다.
      .mbtn {
        display: block;
      }

btn에 click이벤트로 나타나고 사라지게 만듭니다.
우선 기본 display를 보이지 않게 하고,
        .header .gnb {
          left: -100%;
          transition: 0.5s;
        }
on이 붙으면 나타나게 합니다.
        .header .gnb.on {
          left: 0;
        }
js 로 toggle 기능을 추가합니다.
        $(".mbtn").on("click", function () {
          $(".gnb").toggleClass("on");
        });
최근 웹 추세는 css에서 최대한으로 설계를 한 뒤에 js에서는 최소한의 기능만을 줍니다. 
class="on" 으로 조절을 하는 방식입니다.

pc사이즈에서도 click 이벤트가 적용되어 있습니다.
if 와 width() 를 사용해 모바일 사이즈의 화면에서만 이벤트가 작동하도록 조건을 만듭니다.
          if ($(window).width() < 769) {
            e.preventDefault();
            // $(".gnb>ul>li>a").next().hide();
            $(this).next().stop().slideToggle();
            $(this).parent().siblings().find("ul").stop().slideUp();
          }

또는 hasClass를 사용해 'on' 이 붙어 있을 경우에만 작동하도록 조건을 만들 수도 있습니다.
          if ($('.gnb').hasClass('on')) {}
resize 이벤트가 발생하면 on 클래스와 현재 지니고 있는 style을 모두 지웁니다.
        $(window).on("resize", function () {
          $(".gnb").removeClass("on");
          $(".gnb>ul ul").removeAttr("style");
        });
        
        
다시 메뉴 버튼을 눌렀을 때 slideUp으로 펼쳐진 슬라이드가 닫히도록 할 수 있습니다.
        $(".mbtn").on("click", function () {
          $(".gnb").toggleClass("on");
          $(".gnb>ul>li>a").next().stop().slideUp();
        });

jquery 메서드 종류를 확인하려면 맑은 커뮤니케이션 - jquery 메서드 정리표에 잘 정리되어 있습니다.
