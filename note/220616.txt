prettier 길어진 attr로 인해 자동 줄바꿈이 생길 때 줄바꿈을 방지하는 방법입니다.
Print width 속성의 값이 80으로 되어있는데 100~160으로 조절해주면 됩니다.



직접 업로드, youtube 소스코드 업로드 두 가지 동영상 집어넣기 방법을 배웁니다.

동영상을 넣을 때는 용량이 크기 때문에 트래픽 제한에 걸릴 수 있습니다.
따라서 다른 서버에 있는 영상을 가져와 이용합니다.

유튜브 원본 동영상에 비해서 조금 잘린 이미지를 들고오게 되는 문제가 있습니다.




동영상 이미지는 mp4로 업로드를 하게 됩니다.
pixabay에서 많은 동영상을 찾을 수 있습니다.

동영상 업로드는 video tag 안에 넣습니다.
        <div class="left">
          <video src="../img/movie01.mp4"></video>
        </div>
autoplay는 비디오 자동재생입니다.
          <video src="../img/movie01.mp4" autoplay></video>
muted는 소리 없애기 입니다.
          <video src="../img/movie01.mp4" autoplay muted></video>
playsinline는 아이폰이나 사파리에서 새 창으로 열리는 것을 방지합니다.
          <video src="../img/movie01.mp4" autoplay muted playsinline></video>





column을 적용하면 가로 세로 축이 바뀌기 때문에 y축으로 가운데로 배열하기 위해서는 align-items가 아닌 justify-content : center; 입니다.
      .movie01 .right {
        display: flex;
        flex-direction: column;
        justify-content: center;
      }
align-items로 y축 가운데 정렬을 적용하려면 box를 하나 더 싸주면 됩니다.
        <div class="right">
          <div class="inner">
            <h2>mp4 동영상 플레이</h2>
            <p>Lorem ipsum dolor sit amet consectetur.</p>
          </div>
        </div>

      .movie01 .right {
        display: flex;
        align-items: center;
      } 
   
    
    
    
    
.trigger("pause")로 video에 pause 기능을 넣습니다.
우선 video에 클래스를 부여합니다. 
          <video src="../img/movie01.mp4" autoplay muted playsinline class="vd01"></video>
js 로 video를 선택한 뒤 .trigger("pause") 속성을 줍니다.
      $(function () {
        $(".movie01 .right i:nth-child(1)").on("click", function () {
          $(".vd01").trigger("pause");
        });
      });
.trigger("play");가 play 기능입니다.
          $(".vd01").trigger("play");



유튜브 동영상을 넣는 방법입니다.
https://github.com/pupunzi/jquery.mb.YTPlayer
https://pupunzi.com/mb.components/mb.YTPlayer/demo/demo.html
동영상 background 설정을 할 수 있습니다.

사용 설명서를 따라 css와 js 파일을 넣고 준비합니다.
css를 넣고,
<link href="css/jquery.mb.YTPlayer.min.css" media="all" rel="stylesheet" type="text/css">
js를 넣고,
<script src="inc/jquery.mb.YTPlayer.js"></script>
html을 입력하고,
      <section class="movie002">
    <div id="bgndVideo" class="player">My video</div>
</section>
js 펑션을 실행합니다.
      jQuery("#[playerID]").YTPlayer();

가독성을 높이기 위해 data-property는 html이 아닌 js에서 작업하도록 합니다.
        $("#bgndVideo").YTPlayer({
          videoURL: "http://youtu.be/BsekcY04xvQ",
          containment: "body",
          autoPlay: true,
          mute: true,
          startAt: 0,
          opacity: 1,
        });





컨트롤러를 없앨 수 있습니다.
          showControls: false,
원하는 비디오의 url은 videoURL: ""에 넣습니다.
          videoURL: "https://www.youtube.com/watch?v=Pmt3tms9HdI",
시작지점은  startAt: [number] 입니다.
          startAt: 20, //초 단위 입니다.
stopMovieOnBlur: false, 윈도우 focus를 벗어나도 재생하도록 할 수 있습니다.
          stopMovieOnBlur: false, //윈도우 focus를 벗어나도 재생되도록 합니다.
playOnlyIfVisible: true, 화면 안에 동영상이 일정 부분 이상 포함되어 있을 경우에만 재생되도록 합니다.
          playOnlyIfVisible: true,



재생, 멈춤, 볼륨 등 동영상 동작 버튼을 커스텀할 수 있습니다.
        $(".movie02 i:nth-child(1)").on("click", function () {
          $("#bgndVideo").YTPPause();
        });
        $(".movie02 i:nth-child(2)").on("click", function () {
          $("#bgndVideo").YTPPlay();
        });
        $(".movie02 i:nth-child(3)").on("click", function () {
          $("#bgndVideo").YTPUnmute();
        });





풀 페이지는 높은 접근성이 장점입니다. 포트폴리오를 보여줄 때 휠 조작만으로 모든 것을 보여줄 수 있기 때문입니다.

풀 페이지를 만드는 방법입니다.
https://alvarotrigo.com/fullPage/ko/
설명서를 따라 css와 js 파일을 넣습니다.
<link rel="stylesheet" type="text/css" href="fullpage.css" />
<script type="text/javascript" src="fullpage.js"></script>

html 구조를 만듭니다.
    <main id="portfolio">
      <section class="section portfolio01">01</section>
      <section class="section portfolio02">02</section>
      <section class="section portfolio03">03</section>
    </main>
클래스를 두 개 이상 넣으려면 .classNama1.className2 처럼 입력하면 됩니다.
section*5.section.portfolio0$

js로 fullpage()를 적용하면 완성됩니다.
      $(function () {
        $("#portfolio").fullpage();
      });
      
navigation: true, 속성으로 현재 페이지를 나타내는 버튼을 추가할 수 있습니다.
        $("#portfolio").fullpage({
          navigation: true,
        });
anchors: [ ] 속성을 이용하면 hash를 이용하여 원하는 슬라이드로 이동이 가능합니다. 
a 태그로 href를 지정하면 됩니다.
        $("#portfolio").fullpage({
          anchors: ["p01", "p02", "p03", "p04", "p05"],
        });
페이지를 슬라이드 해보면 url이 변하는 것을 확인할 수 있습니다.
/doc/fullpage01.html#p01
/doc/fullpage01.html#p02
...
/doc/fullpage01.html#undefined // 존재하지 않는 경우에는 undefined로 표시됩니다.



버튼을 눌러 해당 슬러이드로 이동하는 기능을 구현합니다.
destination.index를 찾아 이동할 수 있습니다.
클래스 on을 활용하여 애니메이션을 이용할 수 있습니다.
        $("#portfolio").fullpage({
          anchors: ["p01", "p02", "p03", "p04", "p05"],
          afterLoad: function (origin, destination, direction, trigger) {
            $(".section").eq(destination.index).addClass("on").siblings().removeClass("on");
          },
        });
loopTop 속성과 loopBottom 속성으로 첫번째 구역과 마지막 구역에서의 이동 여부를 선택할 수 있습니다.
          loopTop: true,
          loopBottom: true,
        
transform 버그로 1px 오류가 났습니다. 가상요소 선택자에도 적용을 하니 1px로 변합니다.        
        
슬라이드 버튼 hover시 width 살짝 늘어나게하기



onLeave 를 이용하면 슬라이드를 이동하면서 animation을 실행할 수 있습니다.
하지만 event가 발생을 해야 함수가 실행되기 때문에 초기 화면에는 적용이 안됩니다. 
따라서 afterLoad로 초기화면에서 새로고침을 할 때에 적용을 하도록 하고, onLeave 함수를 실행하면 됩니다.
          afterLoad: function (origin, destination, direction, trigger) {
            $(".section").eq(destination.index).addClass("on");
            $("nav li").eq(destination.index).addClass("on");
          },
          onLeave: function (origin, destination, direction, trigger) {
            $(".section").eq(destination.index).addClass("on").siblings().removeClass("on");
            $("nav li").eq(destination.index).addClass("on").siblings().removeClass("on");
          },





자소서는 자신을 궁금하게 만드는 것
읽게끔 하려면
1) 핵심 키워드 강조
2) 반복표현 X
3) 구체적인 표현 O
4) 사례/에피소드


준비과정(관심을 가지게 된 이유와 한 것)
노력


인상 주는 포인트
1. 직무에 대체 구체적 작성
2. 자기만의 이야기
3. 어려운 질문에도 많이 고민한 흔적


정보는 최신 정보를 가장 위로


지원동기
왜 개발자가 되고 싶은가
어떤 개발자가 되고 싶은가
왜 이 회사에 지원하고 싶은가


장점
직무분야와 상관없이 먼저 장점을 쓰시오