파일 확장자 : 폴더옵션 > 파일확장명 체크
소스보기 : ctrl + U
검사 : F12

auto Rename Tag : extention 설치

//////////////////////////////////////////

html tag : tag는 정해져 있으며 실제로 사용하는 tag들은 20가지 정도

<div stlye="color:red">유영한</div>
<script>
document.querySelector('div').style.display = 'none';
</script>

//////////////////////////////////////

<div>유영한</div>

JavaScript 자바스크립트가 우선순위
<script>
document.querySelector('div').style.display = 'none';
</script>

css
<style>
div {color:red;display:block;}
</style>

////////////////////////////////////////
vscode extender
eslint : 맞춤법 검사기
prettier : 자동 줄바꿈
code runner : js코딩 실행 (node.js설치 선행)


//////////////////////////////
웹표준코딩 : sementic tag를 이용하여 html 코드를 작성하는 것
html 형식은 ! 입력하면 자동으로 생성가능

/////////////////////////
태그 수준은 parent와 children으로 구분하고, 
같은 수준 안에서는 next, 첫번째 children 마지막 children으로 구분
<head> // parent 
    <meta charset="UTF-8"> // children
    <meta http-equiv="X-UA-Compatible" content="IE=edge"> // next

    <meta charset="UTF-8"> // 언어설정 
    <meta http-equiv="X-UA-Compatible" content="IE=edge"> // 브라우저
    <title>Document</title> // 웹페이지 이름

<body>
    // 이 곳에서 파일 구성
</body>

중요    <meta name="viewport" content="width=device-width, initial-scale=1.0"> // 웹 앱 기반 설정

//////////////////////
Alt + L + O : 현재 탭을 브라우저로 열기

<div></div> // width : auto, height : auto 자동으로 가득 채우기

div는 옆으로 다른 태그가 오는 것을 허용하지 않음
////////////////////////

selector(선택자) : style 태그 안에서 div 선택자로 모든 div의 color : red 로 설정했다.
    <style>
        div {
            color : red
        }
    </style>
  </head>

  <body>
    <div>01</div>
    <div>02</div>
  </body>

//////////////

.class 로 이름을 붙여 선택할 수 있다.
    <style>
      .상우 {
        color: red;
      }
    </style>
    <div class="상우">01</div>
////////////////////

두 가지 이상의 경우에도 적용이 된다 
    <style>
      .박.상우 {
        color: red;
      }
    </style>
  <body>
    <div class="최 상우">01</div> // 띄어쓰기로 구분해도 두 가지 상우에 모두 적용이 되었다.
    <div class="박 상우">02</div>
  </body>

////////////////////
.class 는 두 개 이상의 이름 모두에 적용이 되지만 
#id 의 경우에는 반드시 하나의 이름만이 적용된다

      .상우 {
        color: red;
      }
      #상우{
          color: blueviolet;
      }

    <div class="최 상우">01</div> // class를 호출하는 방법이 .class 이고
    <div id="상우">02</div> // id를 호출하는 방법은 #id

/////////////////////
태그 안에서 적용되는 style 은 JS계급입니다. JS가 css 스타일보다 먼저 적용됩니다.
    <div id="상우" class="최 상우" style="color: #ff0">01</div>

/////////////////////////
semantic tag : 의미가 있는 tag
lorem5, lorem 은 더미 텍스트입니다.

자주 쓰는 tag 목록
  <body>
    <div>Lorem ipsum dolor sit amet.</div>
    <h1>Lorem ipsum dolor sit amet.</h1> <!--대제목-->
    <h2>Lorem ipsum dolor sit amet.</h2> <!--소제목-->
    <h6>Lorem ipsum dolor sit amet.</h6>
    <ul> <!--순서가 없는 리스트-->
      <li>Lorem ipsum dolor sit amet.</li>
      <li>Lorem ipsum dolor sit amet.</li>
    </ul>
    <ol> <!--순서가 있는 리스트-->
      <li>Lorem ipsum dolor sit amet.</li>
      <li>Lorem ipsum dolor sit amet.</li>
    </ol>
    <figure>Lorem ipsum dolor sit amet.</figure> <!--사진 등과 같이 문서의 주요 흐름과는 독립적인 콘텐츠를 정의할 때-->
    <a href="">Lorem ipsum dolor sit amet.</a> <!--링크-->
    <strong>Lorem ipsum dolor sit amet.</strong> <!--강조-->
    <em>Lorem ipsum dolor sit amet.</em> <!--폰트 기울이기-->
    <hr /> <!--가로 선-->
    <p>Lorem ipsum dolor sit amet.</p>
    <nav>Lorem ipsum dolor sit amet.</nav>
    <header>Lorem ipsum dolor sit amet.</header>
    <footer>Lorem ipsum dolor sit amet.</footer>
    <main>Lorem ipsum dolor sit amet.</main>
  </body>


/////////////////////////////////////
글자 태그는 block이 아닌 inline 
    <a href="">Lorem ipsum dolor sit amet.</a><!--링크-->
    <strong>Lorem ipsum dolor sit amet.</strong> <!--강조-->
    <em>Lorem ipsum dolor sit amet.</em> <!--폰트 기울이기-->

Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet.


//////////////////////////////
reset css 설정 초기화

* : all. 모든 것에 적용
inherit : 브라우저가 본래 가지고 있는 성질 
    <style>
      * {
        margin: 0;
        padding: 0;
        font-size: inherit;
        font-weight: inherit;
        box-sizing: border-box;
      }

ul, ol 앞의 점과 숫자 없애기
      }
      ul,ol{
          list-style: none;
      }

a 효과 색상 없애기
      a {
        text-decoration: none;
        color: inherit;
      }

strong,em 기울기 없애기
      strong,em {
          font-style: normal;
      }

줄 간 간격 줄이기
      body {
          line-height: 1;
      }
    </style>

/////////////////////////////

      .box {
        background: #ddd;
        padding: 100px 0;
        text-align: center;
      }

      .box h2 { <!-- .box 안의 h2 -->
        font-size: 30px;
        font-weight: bold;
        margin-bottom: 30px;
      }

      .box p { <!-- .box 안의 p -->
        font-size: 15px;
        margin-bottom: 30px;
      }

      .box .container { <!-- .box 안의 .container -->
        display: flex; <!-- 가로로 배열됨 -->
        width: 1200px;
        gap: 30px; <!-- 사이 간격을 줄 수 있음 -->
        margin-top: 0;
        margin-bottom: 0;
        margin-left: auto; <!-- auto는 자동으로 길이 맞춤 -->
        margin-right: auto;
        background-color: #ff0;
      }

      .box figure {
        background: #f00;
      }

    </style>
  </head>
  <body>
    <h1>제목</h1>
    <section class="box"> <!-- section은 큰 div 역할 -->
      <h2>Lorem ipsum dolor sit.</h2>
      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p>
      <div class="container"> <!-- div.container 로 자동완성 -->
        <figure>Lorem ipsum dolor sit amet, consectetur adipisicing.</figure>
        <figure>Lorem ipsum dolor sit amet, consectetur adipisicing.</figure>
        <figure>Lorem ipsum dolor sit amet, consectetur adipisicing.</figure>
      </div>
    </section>
  </body>
</html>
